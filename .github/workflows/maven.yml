name: Build Docker Image

on:
  #push:
  #  branches: [ main ]
  #pull_request:
  #  branches: [ main ]
  workflow_dispatch:
    inputs:
      name:
        description: 'Name'
        required: true
        default: 'Deepak'
  repository_dispatch: 
jobs:
  maven_build:
    name: Maven Build
    runs-on: ubuntu-latest
    steps:
      - name: Test Parameter Variable
        run: echo ${{github.event.inputs.name}}
        
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
                  ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        
      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project

      - name: Show extracted Maven project version
        run: echo ${{ steps.project.outputs.version }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: linux
          path: /home/runner/work/TestApplication/TestApplication/

  docker_build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [maven_build]
    steps:

      - name: Download Artifact
        uses: actions/download-artifact@v2.0.10
        with:
          name: linux
      - name: Build Build
        run: docker build -t deepakindocker/testapplication .

      - name: Build Login
        run: docker login --username deepakindocker --password ${{secrets.DOCKER_PASSWORD}}

      - name: Docker Push
        run: docker push deepakindocker/testapplication
